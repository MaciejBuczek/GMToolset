@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@inject Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Builder.RequestLocalizationOptions> localizationOptions

@{
    string GetCultureFlagPath(string cultureName)
    {
        return string.IsNullOrEmpty(cultureName) ? string.Empty : $"/lib/flags/{cultureName}.png";
    }
}

@{
    var currentCulture = Context.Features.Get<Microsoft.AspNetCore.Localization.IRequestCultureFeature>();
    var cultureList = localizationOptions?.Value?.SupportedUICultures?.Select(x => new SelectListItem
            {
                Value = x.Name,
                Text = GetCultureFlagPath(x.Name)
            }).ToList();
    var returnUrl = string.IsNullOrWhiteSpace(Context.Request.Path) ? "~/" : $"~{Context.Request.Path.Value}{Context.Request.QueryString}";
}

<div class="dropdown-triangle">
    @if (currentCulture != null && cultureList != null)
    {
        <div class="dropdown-triangle">
            <button class="dropbtn">Language</button>
            <div class="dropdown-content">
                @foreach(var culture in cultureList)
                {
                    <a asp-controller="Home" asp-action="LanguageToggle" asp-route-cultureName="@culture.Value" asp-route-returnUrl="@returnUrl">
                        <img class="flag" src="@culture.Text"/>
                    </a>
                }
            </div>
        </div>
    }
</div>